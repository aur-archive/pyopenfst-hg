diff -r 129edb5c019e Makefile
--- a/Makefile	Sat Oct 08 22:39:04 2011 -0400
+++ b/Makefile	Thu Oct 13 13:02:14 2011 +0200
@@ -1,6 +1,8 @@
+INSTALL_OPTS=
+
 install:
-	python setup.py build
-	sudo python setup.py install
+	python2 setup.py build
+	python2 setup.py install $(INSTALL_OPTS)
 
 all: _openfst.so
 
diff -r 129edb5c019e openfst.i
--- a/openfst.i	Sat Oct 08 22:39:04 2011 -0400
+++ b/openfst.i	Thu Oct 13 13:02:14 2011 +0200
@@ -46,6 +46,12 @@
     MATCH_UNKNOWN
 };
 
+enum MatcherRewriteMode {
+  MATCHER_REWRITE_AUTO = 0,    /* Rewrites both sides iff acceptor. */
+  MATCHER_REWRITE_ALWAYS,
+  MATCHER_REWRITE_NEVER
+};
+
 /* FST properties. */
 %include "openfst_properties.i"
 /* Templates for the class hierarchy. */
diff -r 129edb5c019e openfst_properties.i
--- a/openfst_properties.i	Sat Oct 08 22:39:04 2011 -0400
+++ b/openfst_properties.i	Thu Oct 13 13:02:14 2011 +0200
@@ -65,16 +65,20 @@
 uint64 ConcatProperties(uint64 inprops1, uint64 inprops2,
                         bool delayed = false);
 uint64 DeterminizeProperties(uint64 inprops, bool has_subsequential_label);
-uint64 DifferenceProperties(uint64 inprops1, uint64 inprops2);
+// uint64 DifferenceProperties(uint64 inprops1, uint64 inprops2);
 uint64 FactorWeightProperties(uint64 inprops);
-uint64 IntersectProperties(uint64 inprops1, uint64 inprops2);
+// uint64 IntersectProperties(uint64 inprops1, uint64 inprops2);
 uint64 InvertProperties(uint64 inprops);
 uint64 ProjectProperties(uint64 inprops, bool project_input);
 uint64 RelabelProperties(uint64 inprops);
+/*
+ this triggers the 64-bit integer SWIG bug:
+ http://old.nabble.com/-BUG--stdint.i-gets-int64_t-wrong-on-64bit-archs-td20695275.html
+
 uint64 ReplaceProperties(const vector<uint64>& inprops,
                          ssize_t root,
                          bool epsilon_on_replace,
-                         bool no_empty_fst);
+                         bool no_empty_fst);*/
 uint64 ReverseProperties(uint64 inprops);
 uint64 ReweightProperties(uint64 inprops);
 uint64 RmEpsilonProperties(uint64 inprops, bool delayed = false);
diff -r 129edb5c019e openfst_symtab.i
--- a/openfst_symtab.i	Sat Oct 08 22:39:04 2011 -0400
+++ b/openfst_symtab.i	Thu Oct 13 13:02:14 2011 +0200
@@ -56,7 +56,7 @@
 struct SymbolTableIterator {
     SymbolTableIterator(SymbolTable const & symtab);
     bool Done(void);
-    const char * Symbol(void);
+    std::string Symbol(void);
     long long Value(void);
     void Next(void);
     void Reset(void);
diff -r 129edb5c019e openfst_templates.i
--- a/openfst_templates.i	Sat Oct 08 22:39:04 2011 -0400
+++ b/openfst_templates.i	Thu Oct 13 13:02:14 2011 +0200
@@ -338,14 +338,18 @@
 public:
     typedef typename M::FST FST;
     RhoMatcher(FST const &fst, MatchType match_type,
-               int rho_label=kNoLabel, bool rewrite_both=false);
+               int rho_label=kNoLabel,
+               MatcherRewriteMode rewrite_mode = MATCHER_REWRITE_AUTO,
+               M *matcher = 0);
 };
 
 template<class M> class SigmaMatcher {
 public:
     typedef typename M::FST FST;
     SigmaMatcher(FST const &fst, MatchType match_type,
-                 int sigma_label=kNoLabel, bool rewrite_both=false);
+                 int sigma_label=kNoLabel,
+                 MatcherRewriteMode rewrite_mode = MATCHER_REWRITE_AUTO,
+                 M *matcher = 0);
 };
 
 template<class M> class PhiMatcher {
@@ -353,7 +357,8 @@
     typedef typename M::FST FST;
     PhiMatcher(FST const &fst, MatchType match_type,
                int phi_label=kNoLabel, bool phi_loop=true,
-               bool rewrite_both=false);
+               MatcherRewriteMode rewrite_mode = MATCHER_REWRITE_AUTO,
+               M *matcher = 0);
 };
 
 /* Compose options. */
